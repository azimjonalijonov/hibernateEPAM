plugins {
    id 'java'
    id 'io.spring.javaformat' version '0.0.40'

}

java {
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
            }
        }
    }
}



group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework:spring-context:6.0.7"
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    testImplementation "org.springframework:spring-test:5.3.18"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
    testImplementation "com.tngtech.archunit:archunit:0.23.1"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2' // For @PostConstruct
    implementation 'org.postgresql:postgresql:42.2.23'
    implementation "org.hibernate.orm:hibernate-core:6.4.0.Final"
    runtimeOnly("org.postgresql:postgresql:42.6.0")
    testImplementation 'org.mockito:mockito-core:3.12.4'


}

test {
    useJUnitPlatform()
}
//tasks.withType(io.spring.javaformat.gradle.FormatTask) {
//    dependsOn = ['cleanBuildCache'] // Ensure formatting task runs after clean
//}